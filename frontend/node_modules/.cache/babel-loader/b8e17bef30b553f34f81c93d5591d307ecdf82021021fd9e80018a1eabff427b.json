{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/ecommerce/frontend/src/screens/ShippingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShippingScreen() {\n  _s();\n  const cart = useSelector(state => state.cart);\n  const [shippingAddress] = cart;\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [country, setCountry] = useState('');\n  const [description, setDescription] = useState('');\n  const submitHandler = e => {\n    e.preventDefault();\n    alert(\"submitted\");\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"mt-3\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Address\",\n          value: address ? address : '',\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"mt-3\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter City\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postalCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"mt-3\",\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Postal Code\",\n          value: postalCode ? postalCode : '',\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"mt-3\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Country\",\n          value: country ? country : 'Lesotho',\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"mt-3\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          type: \"text\",\n          placeholder: \"Enter Description\",\n          value: description ? description : '',\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-3\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ShippingScreen, \"FJpBf9J4gHLKUE7+il+rNp3wRlQ=\", false, function () {\n  return [useSelector];\n});\n_c = ShippingScreen;\nexport default ShippingScreen;\nvar _c;\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Form","Button","useDispatch","useSelector","register","FormContainer","jsxDEV","_jsxDEV","ShippingScreen","_s","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","description","setDescription","submitHandler","e","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","className","Control","required","type","placeholder","value","onChange","target","as","variant","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/ecommerce/frontend/src/screens/ShippingScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { register } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nfunction ShippingScreen() {\n\n    const cart = useSelector( state => state.cart)\n    const [ shippingAddress ] = cart\n\n    const [address, setAddress] = useState('') \n    const [city, setCity] = useState('') \n    const [postalCode, setPostalCode] = useState('') \n    const [country, setCountry] = useState('')\n    const [description, setDescription] = useState('')\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        alert(\"submitted\")\n    }\n\n  return (\n    <FormContainer>\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId='address'>\n            <Form.Label className='mt-3'>\n                Address\n            </Form.Label>\n            <Form.Control\n                required\n                type='text'\n                placeholder='Enter Address'\n                value={address ? address : ''}\n                onChange={(e) => setAddress(e.target.value)}\n            >\n\n            </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n            <Form.Label className='mt-3'>\n                City\n            </Form.Label>\n            <Form.Control\n                required\n                type='text'\n                placeholder='Enter City'\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n            >\n\n            </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n            <Form.Label className='mt-3'>\n                Postal Code\n            </Form.Label>\n            <Form.Control\n                required\n                type='text'\n                placeholder='Postal Code'\n                value={postalCode ? postalCode : ''}\n                onChange={(e) => setPostalCode(e.target.value)}\n            >\n\n            </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n            <Form.Label className='mt-3'>\n                Country\n            </Form.Label>\n            <Form.Control\n                required\n                type='text'\n                placeholder='Enter Country'\n                value={country ? country : 'Lesotho'}\n                onChange={(e) => setCountry(e.target.value)}\n            >\n\n            </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='description'>\n            <Form.Label className='mt-3'>\n                Description\n            </Form.Label>\n            <Form.Control\n                as=\"textarea\"\n                type='text'\n                placeholder='Enter Description'\n                value={description ? description : ''}\n                onChange={(e) => setDescription(e.target.value)}\n            >\n\n            </Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary' className='mt-3'>\n            Continue\n        </Button>\n\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}